---
# tasks file for ec2_create
- name: Launch Master instance
  ec2:
    aws_access_key: "{{ aws_access_key|default(lookup('env', 'AWS_ACCESS_KEY')) }}"
    aws_secret_key: "{{ aws_secret_key|default(lookup('env', 'AWS_SECRET_KEY')) }}"
    region: "{{ aws_zone }}"
    instance_type: "{{ master_vm_type }}"
    image: "{{ ami_image }}"
    vpc_subnet_id: "{{ subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_types: "gp2"
        volume_size: "{{ master_volume_size }}"
    wait: true
    keypair: "{{ key_pair_name }}"
    groups: "{{ security_groups }}"
    instance_tags:
      Name: "{{ default_master_name }}"
      Environment: "{{ cld_environment|default( default_environment ) }}"
      Client: "{{ cld_client|default( default_client ) }}"
    user_data: |
      #cloud-config
      hostname: {{ default_master_hostname }}
      fqdn: {{ default_master_hostname}}.{{default_domain}}
  register: ec2_master

- name: Launch Slave instances
  ec2:
    aws_access_key: "{{ aws_access_key|default(lookup('env', 'AWS_ACCESS_KEY')) }}"
    aws_secret_key: "{{ aws_secret_key|default(lookup('env', 'AWS_SECRET_KEY')) }}"
    region: "{{ aws_zone }}"
    instance_type: "{{ slave_vm_type }}"
    image: "{{ ami_image }}"
    vpc_subnet_id: "{{ subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_types: "gp2"
        volume_size: "{{ slave_volume_size }}"
    wait: true
    keypair: "{{ key_pair_name }}"
    groups: "{{ security_groups }}"
    instance_tags:
      Name: "{{ default_slave_name }} {{ item }}"
      Environment: "{{ cld_environment|default( default_environment ) }}"
      Client: "{{ cld_client|default( default_client ) }}"
    user_data: |
      #cloud-config
      hostname: {{ default_slave_hostname }}{{ item }}
      fqdn: {{ default_slave_hostname}}{{ item }}.{{default_domain}}
  register: ec2_slaves
  with_sequence: count={{ num_slaves | default( default_num_slaves ) }}

- name: Wait for EC2 instances to boot-up
  pause: seconds=400

- name: Wait for SSH
  wait_for:
    host: "{{ item.instances.0.private_ip }}"
    port: 22
    timeout: 300
    delay: 30
    state: started
  ignore_errors: yes
  with_items:
    - "{{ ec2_master }}"
    - "{{ ec2_slaves.results }}"

- name: Wait for SSH
  pause: seconds=30

- name: Add master to in-memory inventory and add it to groups
  add_host:
    name: "{{ item.instances.0.private_ip }}"
    groups: cluster_hosts, master
  with_flattened:
    - "{{ ec2_master }}"

- name: Add slaves to in-memory inventory and add them to groups
  add_host:
    name: "{{ item.instances.0.private_ip }}"
    groups: cluster_hosts, slaves
  with_items:
    - "{{ ec2_slaves.results }}"